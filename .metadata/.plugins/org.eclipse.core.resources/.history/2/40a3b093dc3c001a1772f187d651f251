package lc216.combinationsum;

import java.util.ArrayList;
import java.util.List;

class Solution {
	
	public List<List<Integer>> combinationSum3(int k, int n)  {
			List<List<Integer>> combs = new ArrayList<List<Integer>>();
			combine(combs, new ArrayList<Integer>(), 1, n, k);
			return combs;
		}
		public static void combine(List<List<Integer>> combs, List<Integer> comb, int start, int n, int k) {
			if(k==0) {
				if(findSum(comb,n))
				combs.add(new ArrayList<Integer>(comb));
				return;
			}
			for(int i=start;i<=9;i++) {
				comb.add(i);
				combine(combs, comb, i+1, n, k-1);
				comb.remove(comb.size()-1);
			}
		}
		private static boolean findSum(List<Integer> comb, int k) {
			
			int sum=0;
			for(int x: comb) {
				sum=sum+x;
			}
			return (sum==k);
			
		}
}