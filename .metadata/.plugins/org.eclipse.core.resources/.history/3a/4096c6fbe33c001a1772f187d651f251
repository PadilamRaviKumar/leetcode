package lc90.subsetsduplicate;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

class Solution {
	Set<List<Integer>> sout=new HashSet();
	List<List<Integer>> out=new ArrayList<List<Integer>>();
    public List<List<Integer>> subsetsWithDup(int[] nums) {
    	
    	Arrays.sort(nums);
    	List<Integer> input=new ArrayList<Integer>();
    	for(int x: nums) {
    		input.add(x);
    	}
    	auxFindSubsets(input, new ArrayList<Integer>());
    	for(List<Integer> l: sout) {
    		out.add(l);
    	}
		return out;
        
    }

	private void auxFindSubsets(List<Integer> input,List<Integer> subset) {
		
		if(input.size()==0) {
			List<Integer> tmpsubset=new ArrayList<Integer>(subset);
			sout.add(tmpsubset);
			//System.out.println(tmpsubset);
			return;
		}
								
			int x=(int) input.remove(0);		
			subset.add(x);
			auxFindSubsets(input,subset);
			subset.remove(subset.size()-1);
			auxFindSubsets(input,subset);
			input.add(0, x);				
	}
}
